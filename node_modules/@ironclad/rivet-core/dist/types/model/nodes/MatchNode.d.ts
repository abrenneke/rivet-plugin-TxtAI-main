import { ChartNode, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { Inputs, Outputs } from '../../index.js';
export type MatchNode = ChartNode<'match', MatchNodeData>;
export type MatchNodeData = {
    caseCount: number;
    cases: string[];
};
export declare class MatchNodeImpl extends NodeImpl<MatchNode> {
    static create(): MatchNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const matchNode: import("../NodeImpl.js").NodeDefinition<MatchNode>;
