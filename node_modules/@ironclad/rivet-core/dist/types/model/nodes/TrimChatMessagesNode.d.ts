import { ChartNode, NodeInputDefinition, NodeOutputDefinition } from '../../model/NodeBase.js';
import { NodeImpl, NodeUIData } from '../../model/NodeImpl.js';
import { SupportedModels } from '../../utils/tokenizer.js';
import { EditorDefinition, Inputs, NodeBodySpec, Outputs } from '../../index.js';
export type TrimChatMessagesNodeData = {
    maxTokenCount: number;
    removeFromBeginning: boolean;
    model: SupportedModels;
};
export type TrimChatMessagesNode = ChartNode<'trimChatMessages', TrimChatMessagesNodeData>;
export declare class TrimChatMessagesNodeImpl extends NodeImpl<TrimChatMessagesNode> {
    static create(): TrimChatMessagesNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<TrimChatMessagesNode>[];
    getBody(): string | NodeBodySpec | undefined;
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const trimChatMessagesNode: import("../../index.js").NodeDefinition<TrimChatMessagesNode>;
