import { ChartNode, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { Inputs, Outputs } from '../GraphProcessor.js';
import { EditorDefinition } from '../../index.js';
export type BooleanNode = ChartNode<'boolean', BooleanNodeData>;
export type BooleanNodeData = {
    value?: boolean;
    useValueInput?: boolean;
};
export declare class BooleanNodeImpl extends NodeImpl<BooleanNode> {
    static create(): BooleanNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<BooleanNode>[];
    getBody(): string | undefined;
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const booleanNode: import("../NodeImpl.js").NodeDefinition<BooleanNode>;
