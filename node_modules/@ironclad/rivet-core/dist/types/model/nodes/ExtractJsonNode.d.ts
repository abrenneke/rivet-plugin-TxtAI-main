import { ChartNode, NodeInputDefinition, PortId, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { DataValue } from '../DataValue.js';
export type ExtractJsonNode = ChartNode<'extractJson', ExtractJsonNodeData>;
export type ExtractJsonNodeData = {};
export declare class ExtractJsonNodeImpl extends NodeImpl<ExtractJsonNode> {
    static create(): ExtractJsonNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    process(inputs: Record<PortId, DataValue>): Promise<Record<PortId, DataValue>>;
}
export declare const extractJsonNode: import("../NodeImpl.js").NodeDefinition<ExtractJsonNode>;
