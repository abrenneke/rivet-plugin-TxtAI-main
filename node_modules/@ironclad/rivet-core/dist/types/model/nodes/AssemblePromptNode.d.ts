import { ChartNode, NodeConnection, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { Inputs, Outputs } from '../GraphProcessor.js';
export type AssemblePromptNode = ChartNode<'assemblePrompt', AssemblePromptNodeData>;
export type AssemblePromptNodeData = {};
export declare class AssemblePromptNodeImpl extends NodeImpl<AssemblePromptNode> {
    #private;
    static create(): AssemblePromptNode;
    getInputDefinitions(connections: NodeConnection[]): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const assemblePromptNode: import("../NodeImpl.js").NodeDefinition<AssemblePromptNode>;
