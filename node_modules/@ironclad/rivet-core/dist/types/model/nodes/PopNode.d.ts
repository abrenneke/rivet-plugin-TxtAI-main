import { ChartNode, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { Inputs, Outputs } from '../GraphProcessor.js';
export type PopNode = ChartNode<'pop', {}>;
export declare class PopNodeImpl extends NodeImpl<PopNode> {
    static create(): PopNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const popNode: import("../NodeImpl.js").NodeDefinition<PopNode>;
