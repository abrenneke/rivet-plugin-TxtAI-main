import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { ChartNode, NodeConnection, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { Inputs, Outputs } from '../GraphProcessor.js';
export type CoalesceNode = ChartNode<'coalesce', CoalesceNodeData>;
export type CoalesceNodeData = {};
export declare class CoalesceNodeImpl extends NodeImpl<CoalesceNode> {
    #private;
    static create: () => CoalesceNode;
    getInputDefinitions(connections: NodeConnection[]): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    process(inputData: Inputs): Promise<Outputs>;
}
export declare const coalesceNode: import("../NodeImpl.js").NodeDefinition<CoalesceNode>;
