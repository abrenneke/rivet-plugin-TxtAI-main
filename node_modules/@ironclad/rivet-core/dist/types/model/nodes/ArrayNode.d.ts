import { ChartNode, NodeConnection, NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { Inputs, Outputs } from '../GraphProcessor.js';
import { EditorDefinition } from '../EditorDefinition.js';
export type ArrayNode = ChartNode<'array', ArrayNodeData>;
export type ArrayNodeData = {
    flatten?: boolean;
    flattenDeep?: boolean;
};
export declare class ArrayNodeImpl extends NodeImpl<ArrayNode> {
    #private;
    static create(): ArrayNode;
    getInputDefinitions(connections: NodeConnection[]): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<ArrayNode>[];
    static getUIData(): NodeUIData;
    process(inputs: Inputs): Promise<Outputs>;
}
export declare const arrayNode: import("../NodeImpl.js").NodeDefinition<ArrayNode>;
