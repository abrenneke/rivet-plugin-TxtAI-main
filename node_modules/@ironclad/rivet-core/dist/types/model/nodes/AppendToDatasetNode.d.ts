import { ChartNode } from '../NodeBase.js';
import { NodeInputDefinition, NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, NodeUIData } from '../NodeImpl.js';
import { DatasetId, EditorDefinition, Inputs, Outputs } from '../../index.js';
import { InternalProcessContext } from '../ProcessContext.js';
export type AppendToDatasetNode = ChartNode<'appendToDataset', AppendToDatasetNodeData>;
type AppendToDatasetNodeData = {
    datasetId: DatasetId;
    useDatasetIdInput?: boolean;
};
export declare class AppendToDatasetNodeImpl extends NodeImpl<AppendToDatasetNode> {
    static create(): AppendToDatasetNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    getEditors(): EditorDefinition<AppendToDatasetNode>[] | Promise<EditorDefinition<AppendToDatasetNode>[]>;
    process(inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const appendToDatasetNode: import("../NodeImpl.js").NodeDefinition<AppendToDatasetNode>;
export {};
