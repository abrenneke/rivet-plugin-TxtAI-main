import { ChartNode, NodeImpl, NodeInputDefinition, NodeOutputDefinition, NodeUIData, EditorDefinition, Inputs, InternalProcessContext, Outputs, NodeBodySpec } from '../../index.js';
export type SplitNode = ChartNode<'split', SplitNodeData>;
type SplitNodeData = {
    delimiter: string;
    useDelimiterInput?: boolean;
};
export declare class SplitNodeImpl extends NodeImpl<SplitNode> {
    static create(): SplitNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    static getUIData(): NodeUIData;
    getEditors(): EditorDefinition<SplitNode>[] | Promise<EditorDefinition<SplitNode>[]>;
    getBody(): string | NodeBodySpec | NodeBodySpec[] | undefined;
    process(inputs: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const splitNode: import("../NodeImpl.js").NodeDefinition<SplitNode>;
export {};
