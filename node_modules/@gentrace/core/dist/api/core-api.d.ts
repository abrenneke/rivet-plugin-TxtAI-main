/**
 * Gentrace API
 * These API routes are designed to ingest events from clients.
 *
 * The version of the OpenAPI document: 0.12.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from "../configuration";
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { RequestArgs, BaseAPI } from "../base";
import { PipelinesGet200Response } from "../models";
import { RunRequest } from "../models";
import { RunResponse } from "../models";
import { TestCaseGet200Response } from "../models";
import { TestCasePatch200Response } from "../models";
import { TestCasePost200Response } from "../models";
import { TestCasePostRequest } from "../models";
import { TestResultGet200Response } from "../models";
import { TestResultPost200Response } from "../models";
import { TestResultPostRequest } from "../models";
import { TestResultSimplePostRequest } from "../models";
import { UpdateTestCase } from "../models";
/**
 * CoreApi - axios parameter creator
 * @export
 */
export declare const CoreApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {string} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pipelinesGet: (label?: string, slug?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create a run
     * @param {RunRequest} runRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    runPost: (runRequest: RunRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCaseGet: (pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update an existing test case
     * @param {UpdateTestCase} updateTestCase
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePatch: (updateTestCase: UpdateTestCase, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create a new test case
     * @param {TestCasePostRequest} testCasePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePost: (testCasePostRequest: TestCasePostRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultGet: (resultId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create a new test result from runs
     * @param {TestResultPostRequest} testResultPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultPost: (testResultPostRequest: TestResultPostRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    testResultSimpleGet: (resultId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create a new test result from test runs
     * @param {TestResultSimplePostRequest} testResultSimplePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultSimplePost: (testResultSimplePostRequest: TestResultSimplePostRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CoreApi - functional programming interface
 * @export
 */
export declare const CoreApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {string} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pipelinesGet(label?: string, slug?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PipelinesGet200Response>>;
    /**
     *
     * @summary Create a run
     * @param {RunRequest} runRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    runPost(runRequest: RunRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RunResponse>>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCaseGet(pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestCaseGet200Response>>;
    /**
     *
     * @summary Update an existing test case
     * @param {UpdateTestCase} updateTestCase
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePatch(updateTestCase: UpdateTestCase, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestCasePatch200Response>>;
    /**
     *
     * @summary Create a new test case
     * @param {TestCasePostRequest} testCasePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePost(testCasePostRequest: TestCasePostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestCasePost200Response>>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultGet(resultId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestResultGet200Response>>;
    /**
     *
     * @summary Create a new test result from runs
     * @param {TestResultPostRequest} testResultPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultPost(testResultPostRequest: TestResultPostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestResultPost200Response>>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    testResultSimpleGet(resultId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestResultGet200Response>>;
    /**
     *
     * @summary Create a new test result from test runs
     * @param {TestResultSimplePostRequest} testResultSimplePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultSimplePost(testResultSimplePostRequest: TestResultSimplePostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TestResultPost200Response>>;
};
/**
 * CoreApi - factory interface
 * @export
 */
export declare const CoreApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {string} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pipelinesGet(label?: string, slug?: string, options?: any): AxiosPromise<PipelinesGet200Response>;
    /**
     *
     * @summary Create a run
     * @param {RunRequest} runRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    runPost(runRequest: RunRequest, options?: any): AxiosPromise<RunResponse>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCaseGet(pipelineId?: string, pipelineSlug?: string, options?: any): AxiosPromise<TestCaseGet200Response>;
    /**
     *
     * @summary Update an existing test case
     * @param {UpdateTestCase} updateTestCase
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePatch(updateTestCase: UpdateTestCase, options?: any): AxiosPromise<TestCasePatch200Response>;
    /**
     *
     * @summary Create a new test case
     * @param {TestCasePostRequest} testCasePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCasePost(testCasePostRequest: TestCasePostRequest, options?: any): AxiosPromise<TestCasePost200Response>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultGet(resultId: string, options?: any): AxiosPromise<TestResultGet200Response>;
    /**
     *
     * @summary Create a new test result from runs
     * @param {TestResultPostRequest} testResultPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultPost(testResultPostRequest: TestResultPostRequest, options?: any): AxiosPromise<TestResultPost200Response>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    testResultSimpleGet(resultId: string, options?: any): AxiosPromise<TestResultGet200Response>;
    /**
     *
     * @summary Create a new test result from test runs
     * @param {TestResultSimplePostRequest} testResultSimplePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testResultSimplePost(testResultSimplePostRequest: TestResultSimplePostRequest, options?: any): AxiosPromise<TestResultPost200Response>;
};
/**
 * CoreApi - object-oriented interface
 * @export
 * @class CoreApi
 * @extends {BaseAPI}
 */
export declare class CoreApi extends BaseAPI {
    /**
     *
     * @summary Get pipelines, optionally filtered by label
     * @param {string} [label] The label to filter pipelines by
     * @param {string} [slug] The slug to filter pipelines by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    pipelinesGet(label?: string, slug?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PipelinesGet200Response, any>>;
    /**
     *
     * @summary Create a run
     * @param {RunRequest} runRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    runPost(runRequest: RunRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RunResponse, any>>;
    /**
     *
     * @summary Get test cases for a pipeline
     * @param {string} [pipelineId] The ID of the Pipeline to retrieve test cases for
     * @param {string} [pipelineSlug] The slug of the Pipeline to retrieve test cases for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testCaseGet(pipelineId?: string, pipelineSlug?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestCaseGet200Response, any>>;
    /**
     *
     * @summary Update an existing test case
     * @param {UpdateTestCase} updateTestCase
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testCasePatch(updateTestCase: UpdateTestCase, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestCasePatch200Response, any>>;
    /**
     *
     * @summary Create a new test case
     * @param {TestCasePostRequest} testCasePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testCasePost(testCasePostRequest: TestCasePostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestCasePost200Response, any>>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testResultGet(resultId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestResultGet200Response, any>>;
    /**
     *
     * @summary Create a new test result from runs
     * @param {TestResultPostRequest} testResultPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testResultPost(testResultPostRequest: TestResultPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestResultPost200Response, any>>;
    /**
     *
     * @summary Get test result by ID
     * @param {string} resultId The ID of the test result to retrieve
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testResultSimpleGet(resultId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestResultGet200Response, any>>;
    /**
     *
     * @summary Create a new test result from test runs
     * @param {TestResultSimplePostRequest} testResultSimplePostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreApi
     */
    testResultSimplePost(testResultSimplePostRequest: TestResultSimplePostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TestResultPost200Response, any>>;
}
