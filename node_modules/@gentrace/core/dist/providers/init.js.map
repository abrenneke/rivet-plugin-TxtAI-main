{"version":3,"file":"init.js","sources":["init.js"],"sourcesContent":["import { Configuration as Configuration } from \"../configuration\";\nimport { CoreApi } from \"../api\";\nimport { getProcessEnv } from \"./utils\";\nexport let GENTRACE_API_KEY = \"\";\nexport let GENTRACE_BASE_PATH = \"\";\nexport let GENTRACE_BRANCH = \"\";\nexport let GENTRACE_COMMIT = \"\";\nexport let GENTRACE_RUN_NAME = \"\";\nexport let globalGentraceConfig = null;\nexport let globalGentraceApi = null;\nexport let resetGlobalGentraceApi = () => {\n    globalGentraceConfig = null;\n};\nexport function init(values) {\n    const { apiKey, basePath, branch, commit, runName } = values !== null && values !== void 0 ? values : {};\n    if (!apiKey && !getProcessEnv(\"GENTRACE_API_KEY\")) {\n        throw new Error(\"Gentrace API key was provided neither by the `apiKey` param in the constructor nor by the `GENTRACE_API_KEY` env variable.\");\n    }\n    GENTRACE_API_KEY = apiKey || getProcessEnv(\"GENTRACE_API_KEY\");\n    GENTRACE_RUN_NAME = runName || getProcessEnv(\"GENTRACE_RUN_NAME\");\n    if (basePath) {\n        try {\n            const url = new URL(basePath);\n            if (url.pathname.startsWith(\"/api/v1\")) {\n            }\n            else {\n                throw new Error('Gentrace base path must end in \"/api/v1\".');\n            }\n        }\n        catch (err) {\n            throw new Error(`Invalid Gentrace base path: ${err.message}`);\n        }\n        GENTRACE_BASE_PATH = basePath;\n    }\n    globalGentraceConfig = new Configuration({\n        apiKey: GENTRACE_API_KEY,\n        basePath: GENTRACE_BASE_PATH,\n    });\n    globalGentraceApi = new CoreApi(globalGentraceConfig);\n    if (branch) {\n        GENTRACE_BRANCH = branch;\n    }\n    if (commit) {\n        GENTRACE_COMMIT = commit;\n    }\n}\nexport function deinit() {\n    GENTRACE_API_KEY = \"\";\n    GENTRACE_BASE_PATH = \"\";\n    GENTRACE_BRANCH = \"\";\n    GENTRACE_COMMIT = \"\";\n    globalGentraceConfig = null;\n    globalGentraceApi = null;\n}\n"],"names":["GENTRACE_API_KEY","GENTRACE_BASE_PATH","GENTRACE_BRANCH","GENTRACE_COMMIT","GENTRACE_RUN_NAME","globalGentraceConfig","globalGentraceApi","getProcessEnv","Configuration","CoreApi"],"mappings":";;;;;;AAGWA,wBAAgB,GAAG,GAAG;AACtBC,0BAAkB,GAAG,GAAG;AACxBC,uBAAe,GAAG,GAAG;AACrBC,uBAAe,GAAG,GAAG;AACrBC,yBAAiB,GAAG,GAAG;AACvBC,4BAAoB,GAAG,KAAK;AAC5BC,yBAAiB,GAAG,KAAK;AAC1B,IAAC,sBAAsB,GAAG,MAAM;AAC1C,IAAID,4BAAoB,GAAG,IAAI,CAAC;AAChC,EAAE;AACK,SAAS,IAAI,CAAC,MAAM,EAAE;AAC7B,IAAI,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AAC7G,IAAI,IAAI,CAAC,MAAM,IAAI,CAACE,mBAAa,CAAC,kBAAkB,CAAC,EAAE;AACvD,QAAQ,MAAM,IAAI,KAAK,CAAC,4HAA4H,CAAC,CAAC;AACtJ,KAAK;AACL,IAAIP,wBAAgB,GAAG,MAAM,IAAIO,mBAAa,CAAC,kBAAkB,CAAC,CAAC;AACnE,IAAIH,yBAAiB,GAAG,OAAO,IAAIG,mBAAa,CAAC,mBAAmB,CAAC,CAAC;AACtE,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,IAAI;AACZ,YAAY,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC1C,YAAY,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;AACpD,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;AAC7E,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,GAAG,EAAE;AACpB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1E,SAAS;AACT,QAAQN,0BAAkB,GAAG,QAAQ,CAAC;AACtC,KAAK;AACL,IAAII,4BAAoB,GAAG,IAAIG,2BAAa,CAAC;AAC7C,QAAQ,MAAM,EAAER,wBAAgB;AAChC,QAAQ,QAAQ,EAAEC,0BAAkB;AACpC,KAAK,CAAC,CAAC;AACP,IAAIK,yBAAiB,GAAG,IAAIG,eAAO,CAACJ,4BAAoB,CAAC,CAAC;AAC1D,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQH,uBAAe,GAAG,MAAM,CAAC;AACjC,KAAK;AACL,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQC,uBAAe,GAAG,MAAM,CAAC;AACjC,KAAK;AACL,CAAC;AACM,SAAS,MAAM,GAAG;AACzB,IAAIH,wBAAgB,GAAG,EAAE,CAAC;AAC1B,IAAIC,0BAAkB,GAAG,EAAE,CAAC;AAC5B,IAAIC,uBAAe,GAAG,EAAE,CAAC;AACzB,IAAIC,uBAAe,GAAG,EAAE,CAAC;AACzB,IAAIE,4BAAoB,GAAG,IAAI,CAAC;AAChC,IAAIC,yBAAiB,GAAG,IAAI,CAAC;AAC7B;;;;;;"}