'use strict';

var configuration = require('../configuration.js');
var coreApi = require('../api/core-api.js');
var utils = require('./utils.js');

exports.GENTRACE_API_KEY = "";
exports.GENTRACE_BASE_PATH = "";
exports.GENTRACE_BRANCH = "";
exports.GENTRACE_COMMIT = "";
exports.GENTRACE_RUN_NAME = "";
exports.globalGentraceConfig = null;
exports.globalGentraceApi = null;
let resetGlobalGentraceApi = () => {
    exports.globalGentraceConfig = null;
};
function init(values) {
    const { apiKey, basePath, branch, commit, runName } = values !== null && values !== void 0 ? values : {};
    if (!apiKey && !utils.getProcessEnv("GENTRACE_API_KEY")) {
        throw new Error("Gentrace API key was provided neither by the `apiKey` param in the constructor nor by the `GENTRACE_API_KEY` env variable.");
    }
    exports.GENTRACE_API_KEY = apiKey || utils.getProcessEnv("GENTRACE_API_KEY");
    exports.GENTRACE_RUN_NAME = runName || utils.getProcessEnv("GENTRACE_RUN_NAME");
    if (basePath) {
        try {
            const url = new URL(basePath);
            if (url.pathname.startsWith("/api/v1")) {
            }
            else {
                throw new Error('Gentrace base path must end in "/api/v1".');
            }
        }
        catch (err) {
            throw new Error(`Invalid Gentrace base path: ${err.message}`);
        }
        exports.GENTRACE_BASE_PATH = basePath;
    }
    exports.globalGentraceConfig = new configuration.Configuration({
        apiKey: exports.GENTRACE_API_KEY,
        basePath: exports.GENTRACE_BASE_PATH,
    });
    exports.globalGentraceApi = new coreApi.CoreApi(exports.globalGentraceConfig);
    if (branch) {
        exports.GENTRACE_BRANCH = branch;
    }
    if (commit) {
        exports.GENTRACE_COMMIT = commit;
    }
}
function deinit() {
    exports.GENTRACE_API_KEY = "";
    exports.GENTRACE_BASE_PATH = "";
    exports.GENTRACE_BRANCH = "";
    exports.GENTRACE_COMMIT = "";
    exports.globalGentraceConfig = null;
    exports.globalGentraceApi = null;
}

exports.deinit = deinit;
exports.init = init;
exports.resetGlobalGentraceApi = resetGlobalGentraceApi;
//# sourceMappingURL=init.js.map
